package coloretto.player;

import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class Player {
	private int score;
	public String playerID;
	public  State<?> currentState;
	public List<Card> cards;
	public Game currentGame;
	
	
	public Player (String playerID){
		this.playerID = playerID;
		cards = new ArrayList<Card>();
		score = 0;
		currentState = new Anonymous();
		
	}
	
	public State<?> getCurrentState() {
		return currentState;
	}

	public void setCurrentState(State<?> currentState) {
		this.currentState = currentState;
	}

	public List<Card> getCards(){
		return cards;
	}
	
	public String getPlayerID(){
		return playerID;
	}
	
	public void setPlayerID(String playerID) {
		this.playerID = playerID;
	}

	
	public int getScore(){
		List<Integer> frequencys = new ArrayList<Integer>();
		frequencys.add(Collections.frequency(cards, E_Card.BLUE));
		frequencys.add(Collections.frequency(cards, E_Card.BROWN));
		frequencys.add(Collections.frequency(cards, E_Card.GRAY));
		frequencys.add(Collections.frequency(cards, E_Card.GREEN));
		frequencys.add(Collections.frequency(cards, E_Card.ORANGE));
		frequencys.add(Collections.frequency(cards, E_Card.PINK));
		frequencys.add(Collections.frequency(cards, E_Card.YELLOW));
		Collections.sort(frequencys, Collections.reverseOrder());
		
		Integer num_Jokers = Collections.frequency(cards, E_Card.JOKER);
		for (int i=0; i<num_Jokers;i++){
			if (frequencys.get(0) <= 5)
				frequencys.set(0, (frequencys.get(0) + 1));
			else if (frequencys.get(1) <= 5)
				frequencys.set(1, (frequencys.get(1) + 1));
			else frequencys.set(2, (frequencys.get(2) + 1));
		}
		for (int i=0; i<3;i++){
			if (frequencys.get(i).equals(1))
				score += 1;
			if (frequencys.get(i).equals(2))
				score += 3;
			if (frequencys.get(i).equals(3))
				score += 6;
			if (frequencys.get(i).equals(4))
				score += 10;
			if (frequencys.get(i).equals(5))
				score += 15;
			if (frequencys.get(i) >= 6)
				score += 21;
		}
		for (int i=3; i<7;i++){
			if (frequencys.get(i).equals(1))
				score -= 1;
			if (frequencys.get(i).equals(2))
				score -= 3;
			if (frequencys.get(i).equals(3))
				score -= 6;
			if (frequencys.get(i).equals(4))
				score -= 10;
			if (frequencys.get(i).equals(5))
				score -= 15;
			if (frequencys.get(i) >= 6)
				score -= 21;
		}
		score += 2 * (Collections.frequency(cards, E_Card.PLUS_TWO));
		return score;
	}
	
	public String toString(){
		return playerID;
	}
	
	public Game getCurrentGame(){
		return currentGame;
	}
	
	public void setCurrenGame(Game game){
		this.currentGame = game;
	}

}
